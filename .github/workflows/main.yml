name: CI with SonarQube

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  sonarqube-analysis:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      # 3. Install dependencies
      - name: Install dependencies
        run: npm ci


      # 5. Set up Java 17 (required for SonarQube scanner)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 6. Run SonarQube analysis (v2 fixes Java mismatch)
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=vibecoder-dev_dataCompress
            -Dsonar.sources=src
            -Dsonar.tests=src
            -Dsonar.test.inclusions=**/*.test.js,**/*.spec.js,**/*.test.ts,**/*.spec.ts
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.exclusions=**/node_modules/**,**/coverage/**,**/dist/**

  build:
    runs-on: ubuntu-latest
    needs: sonarqube-analysis

    steps:
      # 1. Checkout repo
      - uses: actions/checkout@v4

      # 2. Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      # 3. Install dependencies
      - name: Install dependencies
        run: npm ci

      # 4. Build project
      - name: Build project
        run: npm run build

      # 5. Optional scripts
      - name: Run a one-line script
        run: echo Hello, world!

      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
